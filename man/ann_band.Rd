% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layer_annotation.R
\name{ann_band}
\alias{ann_band}
\title{Add a "band" annotation (filled area band) to a Bokeh figure}
\usage{
ann_band(fig, base = NULL, lower = NULL, upper = NULL,
  base_units = NULL, lower_units = NULL, upper_units = NULL,
  dimension = c("height", "width"), color = NULL, alpha = NULL,
  data = figure_data(fig), line_width = NULL, line_dash = NULL,
  line_dash_offset = NULL, line_join = NULL, line_cap = NULL,
  lgroup = NULL, lname = NULL, ...)
}
\arguments{
\item{fig}{Figure to modify.}

\item{base}{The orthogonal coordinates of the upper and lower values.}

\item{lower}{The coordinates of the lower portion of the filled area band.}

\item{upper}{The coordinations of the upper portion of the filled area band.}

\item{base_units}{Either "screen" or "data".}

\item{lower_units}{Either "screen" or "data".}

\item{upper_units}{Either "screen" or "data".}

\item{dimension}{The direction of the band.}

\item{color}{Color for the glyph - a hex code (with no alpha) or any of the 147 named CSS colors, e.g 'green', 'indigo'. For glyphs with both fill and line properties, see "Handling color" below.}

\item{alpha}{The alpha transparency of the glyph between 0 (transparent) and 1 (opaque). If the glyph has both fill and color properties, see "Handling alpha" below.}

\item{data}{An optional data frame supplying data to which other parameters can refer.}

\item{line_width}{The line width values for the band.}

\item{line_dash}{The line dash values for the band.}

\item{line_dash_offset}{The line dash offset values for the band.}

\item{line_join}{The line join values for the band.}

\item{line_cap}{The line cap values for the band.>}

\item{lgroup}{Layer group.}

\item{lname}{Layer name.}

\item{\ldots}{additional parameters for fine control over fill and line properties (see "Additional parameters" below)}
}
\description{
Add a "band" annotation (filled area band) to a Bokeh figure
}
\section{Handling color}{
 The \code{color} parameter is a high-level plot attribute that provides default behavior for coloring glyphs.
\itemize{
  \item When using a glyph that only has line properties, this will be the color of the line.
  \item When using a glyph that has has line and fill properties, this will be the color of the line and the fill, with the alpha level of the fill reduced by 50\%.
  \item If full control over fill and line color is desired, the \code{fill_color} and \code{line_color} attributes can be specified explicitly and will override \code{color}.
}
When color is \code{NULL} and \code{fill_color} or \code{line_color} are not specified, the color will be chosen from the theme.
}

\section{Handling alpha}{
 The \code{alpha} is a high-level plot attribute that sets the transparency of the glyph being plotted.
\itemize{
  \item When using a glyph that only has line properties, this will be the alpha of the line.
  \item When using a glyph that has has line and fill properties, this will be the alpha of the line and the alpha of the fill will be set to 50\% of this value.
  \item Individual fill and line alpha can be specified with \code{fill_alpha} and \code{line_alpha} and will override \code{alpha}.
}
}

\section{Additional parameters}{

\tabular{ll}{
  \code{fill_color} \tab color to use to fill the glyph with - a hex code (with no alpha) or any of the 147 named CSS colors, e.g 'green', 'indigo' \cr
  \code{fill_alpha} \tab transparency value between 0 (transparent) and 1 (opaque) \cr
  \code{line_color} \tab color to use to stroke lines with - a hex code (with no alpha) or any of the 147 named CSS colors, e.g 'green', 'indigo' \cr
  \code{line_width} \tab stroke width in units of pixels \cr
  \code{line_alpha} \tab transparency value between 0 (transparent) and 1 (opaque) \cr
  \code{line_join} \tab how path segments should be joined together 'miter' 'round' 'bevel' \cr
  \code{line_cap} \tab how path segments should be terminated 'butt' 'round' 'square' \cr
  \code{line_dash} \tab array of integer pixel distances that describe the on-off pattern of dashing to use \cr
  \code{line_dash_offset} \tab the distance in pixels into the line_dash that the pattern should start from
 }
}

\examples{
x <- runif(100)
d <- data.frame(x = x, y = x ^ 2 + rnorm(100, sd = 0.1))
mod <- loess(y ~ x, data = d)
sx <- seq(min(x), max(x), length = 100)
pr <- predict(mod, newdata = sx, se = TRUE)
bd <- data.frame(x = sx, l = pr$fit - pr$se.fit * 2, u = pr$fit + pr$se.fit * 2)
figure() \%>\%
  ly_points(x, y, data = d) \%>\%
  ann_band(x, l, u, data = bd, dimension = "height", color = "gray")
}
\seealso{
Other annotation functions: \code{\link{ann_arrow}},
  \code{\link{ann_box}}, \code{\link{ann_labels}},
  \code{\link{ann_poly}}, \code{\link{ann_span}},
  \code{\link{ann_title}}, \code{\link{ann_whisker}},
  \code{\link{arrow}}
}
\concept{annotation functions}
